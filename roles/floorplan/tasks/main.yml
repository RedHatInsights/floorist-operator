---
# tasks file for FloorPlan
- name: Set up floorplan
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: '{{ ansible_operator_meta.name }}-floorplan'
        namespace: '{{ ansible_operator_meta.namespace }}'
      data:
        floorplan.yaml: '{{ queries | to_nice_yaml }}'
- name: Gather facts from existing floorplans
  ansible.builtin.set_fact:
    existing_schedule: "{{ _metrics_console_redhat_com_floorplan.get('status', {}).get('schedule') }}"
    # Gather used schedules from all FloorPlans from status.schedule attribute,
    # taking only mintues and hours.
    used_slots:
      "{{ query('kubernetes.core.k8s', api_version='metrics.console.redhat.com/v1alpha1', kind='FloorPlan')
          | map(attribute='status', default={})
          | map(attribute='schedule', default='')
          | map('regex_replace', '^([^ ]+) ([^ ]+).*$', '\\1 \\2')
          | list
        }}"
    # Generate available schedules as a product of hours and mintues
    # with a certain step.
    # Hours are generated first, but then swapped, to ensure sequence.
    available_slots:
      "{{ range(0, 24)
          | product(range(0, 60, schedule_step))
          | map('join', ' ')
          | map('regex_replace', '^([^ ]+) ([^ ]+)$', '\\2 \\1')
          | difference(skip_schedules)
          | list
        }}"
- name: Set schedule fact
  ansible.builtin.set_fact:
    schedule:
      "{{ existing_schedule | default((available_slots | difference(used_slots) | first) + ' * * *', true) }}"
- name: Set up floorist schedule
  kubernetes.core.k8s:
    apply: yes
    definition:
      apiVersion: cloud.redhat.com/v1alpha1
      kind: ClowdApp
      metadata:
        name: '{{ ansible_operator_meta.name }}-floorist'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        database:
          sharedDbAppName: '{{ database.shared_db_app_name }}'
        dependencies:
          - '{{ database.shared_db_app_name }}'
        envName: '{{ env_name }}'
        jobs:
        - name: metrics-exporter
          suspend: "{{ suspend }}"
          schedule: "{{ schedule }}"
          concurrencyPolicy: Forbid
          podSpec:
            image: 'quay.io/cloudservices/floorist:{{ floorist_image_tag }}'
            env:
            - name: AWS_BUCKET
              valueFrom:
                secretKeyRef:
                  name: '{{ object_store.secret_name }}'
                  key: bucket
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: '{{ object_store.secret_name }}'
                  key: aws_region
            - name: AWS_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: '{{ object_store.secret_name }}'
                  key: endpoint
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: '{{ object_store.secret_name }}'
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: '{{ object_store.secret_name }}'
                  key: aws_secret_access_key
            - name: FLOORPLAN_FILE
              value: "/tmp/floorplan/floorplan.yaml"
            - name: LOGLEVEL
              value: '{{ log_level }}'
            livenessProbe:
              exec:
                command: ["pgrep", "-f", "run"]
            volumeMounts:
            - name: floorplan-volume
              mountPath: "/tmp/floorplan"
            volumes:
              - name: floorplan-volume
                configMap:
                  name: '{{ ansible_operator_meta.name }}-floorplan'
            resources:
              limits:
                cpu: 100m
                memory: 200Mi
              requests:
                cpu: 50m
                memory: 100Mi
- name: Set schedule status
  operator_sdk.util.k8s_status:
    api_version: metrics.console.redhat.com/v1alpha1
    kind: FloorPlan
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      schedule: "{{ schedule }}"
